

Here are three tables for a restaurant management system:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


create database d1;
use d1;


CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FullName VARCHAR(50),
    PhoneNumber VARCHAR(15),
    Address VARCHAR(100)
);





CREATE TABLE Menu (
    MenuID INT PRIMARY KEY AUTO_INCREMENT,
    ItemName VARCHAR(50),
    Category VARCHAR(20),
    Price DECIMAL(10, 2)
);




CREATE TABLE Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT,
    MenuID INT,
    Quantity INT,
    OrderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (MenuID) REFERENCES Menu(MenuID)
);



CREATE TABLE Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID INT,
    MenuID INT,
    Quantity INT,
    OrderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (MenuID) REFERENCES Menu(MenuID)
);




INSERT INTO Customers (FullName, PhoneNumber, Address) VALUES
('Suman Khadka', '9801234567', 'Kathmandu'),
('Nisha Shrestha', '9812345678', 'Bhaktapur'),
('Pradeep Rai', '9823456789', 'Lalitpur'),
('Anisha Basnet', '9802345678', 'Pokhara'),
('Saroj Gurung', '9813456789', 'Chitwan');



INSERT INTO Menu (ItemName, Category, Price) VALUES
('Momo', 'Snacks', 150.00),
('Dal Bhat', 'Main Course', 250.00),
('Chowmein', 'Snacks', 120.00),
('Sekuwa', 'Main Course', 300.00),
('Tea', 'Beverage', 30.00),
('Coffee', 'Beverage', 50.00),
('Pakauda', 'Snacks', 100.00),
('Thakali Set', 'Main Course', 350.00),
('Jhol Momo', 'Snacks', 180.00),
('Cold Drink', 'Beverage', 40.00);




INSERT INTO Orders (CustomerID, MenuID, Quantity) VALUES
(1, 1, 2),
(2, 3, 1),
(3, 5, 4),
(4, 7, 3),
(5, 2, 1),
(1, 6, 2),
(2, 8, 1),
(3, 9, 3),
(4, 4, 2),
(5, 10, 5);



            Query Processing Examples
            ----------------------------

    Example 1: List All Customers
    ++++++++++++++++++++++++++++++

mysql> SELECT * FROM Customers;
+------------+----------------+-------------+-----------+
| CustomerID | FullName       | PhoneNumber | Address   |
+------------+----------------+-------------+-----------+
|          1 | Suman Khadka   | 9801234567  | Kathmandu |
|          2 | Nisha Shrestha | 9812345678  | Bhaktapur |
|          3 | Pradeep Rai    | 9823456789  | Lalitpur  |
|          4 | Anisha Basnet  | 9802345678  | Pokhara   |
|          5 | Saroj Gurung   | 9813456789  | Chitwan   |
+------------+----------------+-------------+-----------+








    Example 2: List Menu Items in the "Snacks" Category
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

mysql> SELECT * FROM Menu WHERE Category = 'Snacks';
+--------+-----------+----------+--------+
| MenuID | ItemName  | Category | Price  |
+--------+-----------+----------+--------+
|      1 | Momo      | Snacks   | 150.00 |
|      3 | Chowmein  | Snacks   | 120.00 |
|      7 | Pakauda   | Snacks   | 100.00 |
|      9 | Jhol Momo | Snacks   | 180.00 |
+--------+-----------+----------+--------+








    Example 3: Find Total Orders Made by Customer with ID 1
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

mysql> SELECT SUM(Quantity) AS TotalOrders FROM Orders WHERE CustomerID = 1;
+-------------+
| TotalOrders |
+-------------+
|           4 |
+-------------+
1 row in set (0.00 sec)





    Example 4: List All Orders with Item Names and Customer Names
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

mysql> SELECT 
    Orders.OrderID,
    Customers.FullName AS CustomerName,
    Menu.ItemName AS ItemName,
    Orders.Quantity,
    Orders.OrderDate
FROM Orders
JOIN Customers ON Orders.CustomerID = Customers.CustomerID
JOIN Menu ON Orders.MenuID = Menu.MenuID;

+---------+----------------+-------------+----------+---------------------+
| OrderID | CustomerName   | ItemName    | Quantity | OrderDate           |
+---------+----------------+-------------+----------+---------------------+
|       1 | Suman Khadka   | Momo        |        2 | 2024-11-27 23:56:19 |
|       6 | Suman Khadka   | Coffee      |        2 | 2024-11-27 23:56:19 |
|       2 | Nisha Shrestha | Chowmein    |        1 | 2024-11-27 23:56:19 |
|       7 | Nisha Shrestha | Thakali Set |        1 | 2024-11-27 23:56:19 |
|       3 | Pradeep Rai    | Tea         |        4 | 2024-11-27 23:56:19 |
|       8 | Pradeep Rai    | Jhol Momo   |        3 | 2024-11-27 23:56:19 |
|       4 | Anisha Basnet  | Pakauda     |        3 | 2024-11-27 23:56:19 |
|       9 | Anisha Basnet  | Sekuwa      |        2 | 2024-11-27 23:56:19 |
|       5 | Saroj Gurung   | Dal Bhat    |        1 | 2024-11-27 23:56:19 |
|      10 | Saroj Gurung   | Cold Drink  |        5 | 2024-11-27 23:56:19 |
+---------+----------------+-------------+----------+---------------------+
10 rows in set (0.00 sec)







    Example 5: Calculate Total Revenue Generated
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    
mysql> SELECT SUM(Menu.Price * Orders.Quantity) AS TotalRevenue
FROM Orders
JOIN Menu ON Orders.MenuID = Menu.MenuID;

+--------------+
| TotalRevenue |
+--------------+
|      2880.00 |
+--------------+
1 row in set (0.00 sec)




































***************************************************************
***************************************************************
***************************************************************

The tables might represent different entities like
Patients, Doctors, Departments, Appointments, and Bills






CREATE DATABASE db1;
USE db1;



CREATE TABLE Patients (
    patient_id INT PRIMARY KEY AUTO_INCREMENT,
    patient_name VARCHAR(100) NOT NULL,
    date_of_birth DATE,
    gender VARCHAR(10),
    address VARCHAR(255)
);


CREATE TABLE Doctors (
    doctor_id INT PRIMARY KEY AUTO_INCREMENT,
    doctor_name VARCHAR(100) NOT NULL,
    specialty VARCHAR(100),
    contact_number VARCHAR(15)
);



CREATE TABLE Departments (
    department_id INT PRIMARY KEY AUTO_INCREMENT,
    department_name VARCHAR(100) NOT NULL
);


CREATE TABLE Appointments (
    appointment_id INT PRIMARY KEY AUTO_INCREMENT,
    patient_id INT,
    doctor_id INT,
    department_id INT,
    appointment_date DATE,
    FOREIGN KEY (patient_id) REFERENCES Patients(patient_id),
    FOREIGN KEY (doctor_id) REFERENCES Doctors(doctor_id),
    FOREIGN KEY (department_id) REFERENCES Departments(department_id)
);



CREATE TABLE Bills (
    bill_id INT PRIMARY KEY AUTO_INCREMENT,
    appointment_id INT,
    total_amount DECIMAL(10, 2),
    payment_status VARCHAR(20),
    FOREIGN KEY (appointment_id) REFERENCES Appointments(appointment_id)
);



INSERT INTO Patients (patient_name, date_of_birth, gender, address) VALUES
('Sita Kumari', '1990-05-12', 'Female', 'Kathmandu'),
('Ram Bahadur', '1985-09-10', 'Male', 'Pokhara'),
('Geeta Devi', '1972-03-25', 'Female', 'Lalitpur'),
('Mohan Kumar', '1995-11-15', 'Male', 'Butwal'),
('Shiv Mani', '1980-06-08', 'Male', 'Dharan');





INSERT INTO Doctors (doctor_name, specialty, contact_number) VALUES
('Dr. Kumar Shrestha', 'General Surgeon', '9841234567'),
('Dr. Meena Rai', 'Pediatrics', '9847654321'),
('Dr. Sunita Thapa', 'Gynecology', '9811122334'),
('Dr. Arjun Rana', 'Cardiology', '9800112233'),
('Dr. Deepa Karki', 'Orthopedics', '9800556677');





INSERT INTO Departments (department_name) VALUES
('Surgery'),
('Pediatrics'),
('Gynecology'),
('Cardiology'),
('Orthopedics');




INSERT INTO Appointments (patient_id, doctor_id, department_id, appointment_date) VALUES
(1, 1, 1, '2024-12-27'),
(2, 2, 2, '2024-12-28'),
(3, 3, 3, '2024-12-29'),
(4, 4, 4, '2024-12-30'),
(5, 5, 5, '2024-12-31');



INSERT INTO Bills (appointment_id, total_amount, payment_status) VALUES
(1, 1500.00, 'Paid'),
(2, 1200.00, 'Pending'),
(3, 1800.00, 'Paid'),
(4, 2000.00, 'Pending'),
(5, 1000.00, 'Paid');



Example: Get patients who have appointments with doctors in the Cardiology department.


Without optimization (using a nested select):

SELECT patient_name 
FROM Patients
WHERE patient_id IN (
    SELECT patient_id
    FROM Appointments
    WHERE department_id = (
        SELECT department_id
        FROM Departments
        WHERE department_name = 'Cardiology'
    )
);


+--------------+
| patient_name |
+--------------+
| Mohan Kumar  |
+--------------+







Optimized with JOIN:
SELECT p.patient_name, d.doctor_name, dep.department_name, a.appointment_date
FROM Appointments a
JOIN Patients p ON a.patient_id = p.patient_id
JOIN Doctors d ON a.doctor_id = d.doctor_id
JOIN Departments dep ON a.department_id = dep.department_id
WHERE dep.department_name = 'Cardiology';



+--------------+----------------+-----------------+------------------+
| patient_name | doctor_name    | department_name | appointment_date |
+--------------+----------------+-----------------+------------------+
| Mohan Kumar  | Dr. Arjun Rana | Cardiology      | 2024-12-30       |
+--------------+----------------+-----------------+------------------+



Common Table Expressions (CTE)
Optimized with CTE:

WITH AppointmentDetails AS (
    SELECT p.patient_name, d.doctor_name, dep.department_name, a.appointment_date
    FROM Appointments a
    JOIN Patients p ON a.patient_id = p.patient_id
    JOIN Doctors d ON a.doctor_id = d.doctor_id
    JOIN Departments dep ON a.department_id = dep.department_id
)
SELECT * FROM AppointmentDetails
WHERE department_name = 'Cardiology';



+--------------+----------------+-----------------+------------------+
| patient_name | doctor_name    | department_name | appointment_date |
+--------------+----------------+-----------------+------------------+
| Mohan Kumar  | Dr. Arjun Rana | Cardiology      | 2024-12-30       |
+--------------+----------------+-----------------+------------------+

***************************************************************
***************************************************************
***************************************************************



